/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package PPL;

import java.io.*;

import java.util.Date;

/**
 * <h1>This class simulates the Virtual World in which there exist some girls, boys, couples and a variety of gifts.</h1>
 * <p>Arrays of objects of type Girl, Boy, EssentialGift, UtilityGift, LuxuryGift and Couple are included as instance variables.
 * <p>Class responsibility is to simulate real world activities like match-making and gifting through the member functions.
 *
 *
 */
public class VirtualWorld {

    Girl[] girl_ob=new Girl[12];
    Boy[] boy_ob=new Boy[58];
    EssentialGift[] essgift_ob=new EssentialGift[50];
    UtilityGift[] utilgift_ob=new UtilityGift[50];
    LuxuryGift[] luxgift_ob=new LuxuryGift[50];
    Couple couple_ob[]=new Couple[12];
    /**
     * Constructor instantiates the instance variables with default values.
     *
     */
     public VirtualWorld(){
        int i;
       for(i=0; i<girl_ob.length; i++) {
           girl_ob[i]=new Girl();

       }
       for(i=0; i<boy_ob.length; i++) {
           boy_ob[i]=new Boy();
       }
       for(i=0;i<essgift_ob.length;i++)
           essgift_ob[i]=new EssentialGift();
        for(i=0;i<utilgift_ob.length;i++)
           utilgift_ob[i]=new UtilityGift();
         for(i=0;i<luxgift_ob.length;i++)
           luxgift_ob[i]=new LuxuryGift();
         for(i=0; i<couple_ob.length; i++) {
           couple_ob[i]=new Couple();

       }
    }
     /**
      * Method to initialize the arrays with data generated by Testing Utility
      * @throws FileNotFoundException if file does not exist
      * @throws IOException  if there is a problem reading a record from the file
      */
    public void getDataBase() throws FileNotFoundException, IOException{
        BufferedReader br1=new BufferedReader(new FileReader("rand_girls.txt"));
        BufferedReader br2=new BufferedReader(new FileReader("rand_boys.txt"));
        BufferedReader br3=new BufferedReader(new FileReader("rand_gifts.txt"));
        String line;
        int i=0;
        while((line=br1.readLine())!=null){
                 //girl_ob[i].initDetails(line);
               String []arr=line.split(",");

                girl_ob[i].name=arr[0];
                girl_ob[i].attr=Integer.parseInt(arr[1]);
                girl_ob[i].i_level=Integer.parseInt(arr[2]);
                girl_ob[i].m_cost=Integer.parseInt(arr[3]);
                girl_ob[i].criteria=Integer.parseInt(arr[4]);
                girl_ob[i].type=Integer.parseInt(arr[5]);
                girl_ob[i].bf=null;

                i++;

            }
        i=0;
        while((line=br2.readLine())!=null){
                //boy_ob[i].initDetails(line);
                String []arr=line.split(",");
                boy_ob[i].name=arr[0];
                boy_ob[i].attr=Integer.parseInt(arr[1]);
                boy_ob[i].i_level=Integer.parseInt(arr[2]);
                boy_ob[i].budget=Integer.parseInt(arr[3]);
                boy_ob[i].min_attr=Integer.parseInt(arr[4]);
                boy_ob[i].type=Integer.parseInt(arr[5]);
                boy_ob[i].gf=null;
                boy_ob[i].money_spent=0;
                i++;

            }
        int x=0;
        for(i=0;i<50;i++){
                line=br3.readLine();
                //essgift_ob_ob[i].initDetails(line);
                String []arr=line.split(",");
                essgift_ob[x].price=Integer.parseInt(arr[0]);
                essgift_ob[x].val=Integer.parseInt(arr[1]);

                x++;

            }

        for(i=0;i<50;i++){
                line=br3.readLine();
                //utilgift_ob[i].initDetails(line);
                String []arr=line.split(",");
                utilgift_ob[i].price=Integer.parseInt(arr[0]);
                utilgift_ob[i].val=Integer.parseInt(arr[1]);

                x++;

            }
        for(i=0;i<50;i++){
                line=br3.readLine();
                //luxgift_ob[i].initDetails(line);
                String []arr=line.split(",");
                luxgift_ob[i].price=Integer.parseInt(arr[0]);
                luxgift_ob[i].val=Integer.parseInt(arr[1]);

                x++;

            }
    }
    /**
     * Method to allocate boyfriends to each girl according to her criteria: 0-"most rich" 1-"most intelligent" 2-"most attractive"
     */
    public void makeMatches(){
        int i,x;
        int size=boy_ob.length;
        int intel[]=new int[size],rich[]=new int[size],attr[]=new int[size];
        for(i=0;i<boy_ob.length;i++){

            intel[i]=i;
            rich[i]=i;
            attr[i]=i;
        }

        for(i=0;i<girl_ob.length;i++){

            if(girl_ob[i].criteria==0){
                x=selectMostRich(girl_ob[i]);
            }
            else if(girl_ob[i].criteria==1){
                x=selectMostIntel(girl_ob[i]);
            }
            else{
                x=selectMostAttr(girl_ob[i]);
            }
            girl_ob[i].bf=boy_ob[x].name;
            boy_ob[x].gf=girl_ob[i].name;
            couple_ob[i].gf=girl_ob[i];
            couple_ob[i].bf=boy_ob[x];
        }

    }
    /**
     * Method to display the couples formed.
     */
    public void displayMatches(){
        System.out.println("Couples Formed:"+System.lineSeparator());
        for(int i=0;i<couple_ob.length;i++){
            System.out.println(girl_ob[i].name+" "+girl_ob[i].bf+System.lineSeparator());
        }
    }

    int selectMostRich(Girl g){
        int i,max=0,max_b=0;
        for(i=0;i<boy_ob.length;i++){
            if(boy_ob[i].budget>max_b && boy_ob[i].min_attr<=g.attr && boy_ob[i].budget>=g.m_cost && boy_ob[i].gf==null){
                max_b=boy_ob[i].budget;
                max=i;
            }
        }

        return max;
    }
        int selectMostAttr(Girl g){
        int i,max=0,max_a=-1;
        for(i=0;i<boy_ob.length;i++){
            if(boy_ob[i].attr>max_a && boy_ob[i].min_attr<=g.attr && boy_ob[i].budget>=g.m_cost && boy_ob[i].gf==null){
                max_a=boy_ob[i].attr;
                max=i;
            }
        }

        return max;
        }
        int selectMostIntel(Girl g){
        int i,max=0,max_i=-1;
        for(i=0;i<boy_ob.length;i++){
            if(boy_ob[i].i_level>max_i && boy_ob[i].min_attr<=g.attr && boy_ob[i].budget>=g.m_cost && boy_ob[i].gf==null){
                max_i=boy_ob[i].i_level;
                max=i;
            }
        }

        return max;
        }
}


